<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>IT Request Form</title>
    <link href="../css/ITRequestForm.css" rel="stylesheet" />
</head>
<body>
    @{
        var model = Model as Dictionary<string, object> ?? new Dictionary<string, object>();
        var itRequests = model.TryGetValue("ITRequests", out var itRequestsObj) && itRequestsObj is IEnumerable<object> itReqs
        ? itReqs.Cast<dynamic>().ToList()
        : new List<dynamic>();
    }
    <div class="page">
        <div class="header">
            <img src="/images/logo.png" alt="Company Logo" style="height: 50px; display: inline-block; vertical-align: middle; margin-right: 10px;" />
            <div style="display: inline-block; vertical-align: middle;">
                <h1 style="margin: 0;">IT Request Form</h1>
                <p style="margin: 2px 0;">Form No.: @(model.TryGetValue("FormNumber", out var formNumber) ? formNumber?.ToString() : "N/A")</p>
                <p style="margin: 2px 0;">Date: @(model.TryGetValue("RequestDate", out var requestDate) && requestDate is DateTime requestDateValue ? requestDateValue.ToString("dd-MM-yyyy") : "N/A")</p>
            </div>
        </div>
        <div class="container">
            <h2>Section 1: For Requester</h2>
            <table>
                <tr>
                    <th style="width: 30%;">Company</th>
                    <td>@(model.TryGetValue("Company", out var company) && company != null ? company.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Cost Center</th>
                    <td>@(model.TryGetValue("CostCenter", out var costCenter) && costCenter != null ? costCenter.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Requester Full Name</th>
                    <td>@(model.TryGetValue("RequesterName", out var requesterName) ? requesterName?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Nickname</th>
                    <td>@(model.TryGetValue("Nickname", out var nickname) ? nickname?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Employee No.</th>
                    <td>@(model.TryGetValue("EmployeeId", out var employeeId) ? employeeId?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Job Title</th>
                    <td>@(model.TryGetValue("JobTitle", out var jobTitle) && jobTitle != null ? jobTitle.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Start Date</th>
                    <td>@(model.TryGetValue("StartDate", out var startDate) && startDate is DateTime startDateValue ? startDateValue.ToString("dd-MM-yyyy") : "N/A")</td>
                </tr>
                <tr>
                    <th>Mobile Phone</th>
                    <td>@(model.TryGetValue("MobilePhone", out var mobilePhone) ? mobilePhone?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Name - Surname (Eng)</th>
                    <td>@(model.TryGetValue("NameSurname", out var nameSurname) ? nameSurname?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Coordinator Name</th>
                    <td>@(model.TryGetValue("CoordinatorName", out var coordinatorName) ? coordinatorName?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Coordinator Phone</th>
                    <td>@(model.TryGetValue("CoordinatorPhone", out var coordinatorPhone) ? coordinatorPhone?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>Applicant ID</th>
                    <td>@(model.TryGetValue("ApplicantID", out var applicantId) ? applicantId?.ToString() : "N/A")</td>
                </tr>
            </table>
            <h6><strong>Service Types</strong></h6>
            @{
                var serviceList = model.TryGetValue("ServicesList", out var servicesObj) && servicesObj is IEnumerable<object> services
                ? services.Cast<Dictionary<string, object>>().ToList()
                : new List<Dictionary<string, object>>();
                var serviceTypes = serviceList.GroupBy(s => new
                {
                    TypeId = s.TryGetValue("SERVICE_TYPE", out var st) && st != null ? Convert.ToInt32(st) : 0,
                    TypeDescription = s.TryGetValue("TYPE_DESCRIPTION", out var td) ? td?.ToString() ?? "Unknown" : "Unknown"
                }).OrderBy(g => g.Key.TypeId);
            }
            @if (serviceTypes.Any())
            {
                <table class="service-table">
                    <tr>
                        @foreach (var serviceTypeGroup in serviceTypes)
                        {
                            var columnWidth = Math.Round(100.0 / serviceTypes.Count(), 2);
                            <td style="width: @(columnWidth.ToString("F2", System.Globalization.CultureInfo.InvariantCulture))%;">
                                <div class="service-section">
                                    <h6>@(serviceTypeGroup.Key.TypeDescription) (Type @(serviceTypeGroup.Key.TypeId))</h6>
                                    @foreach (var service in serviceTypeGroup.OrderBy(s => s.TryGetValue("ID", out var id) && id != null ? Convert.ToInt32(id) : 0))
                                    {
                                        var serviceId = service.TryGetValue("ID", out var id) && id != null ? Convert.ToInt32(id) : 0;
                                        var serviceDesc = service.TryGetValue("SERVICE_DESCRIPTION", out var desc) ? desc?.ToString() ?? "N/A" : "N/A";
                                        var requiresDetail = service.TryGetValue("REQUIRES_DETAIL", out var rd) && rd is bool requiresDetailFlag && requiresDetailFlag;
                                        var isSelected = service.TryGetValue("IsSelected", out var selected) && selected is bool sel && sel;
                                        var reqDetail = isSelected && requiresDetail
                                        ? itRequests.FirstOrDefault(r => r.SERVICE_ID == serviceId)?.REQ_DETAIL?.ToString() ?? "No details provided"
                                        : null;
                                        <div class="service-item">
                                            <div class="custom-checkbox">
                                                <input type="checkbox" class="custom-checkbox-input" @(isSelected ? "checked" : "") disabled />
                                                <label class="custom-checkbox-label @(isSelected ? "selected" : "")">@serviceDesc</label>
                                            </div>
                                            @if (reqDetail != null)
                                            {
                                                <div class="service-details">
                                                    <label class="detail-label">Details:</label>
                                                    <div class="detail-content">@(string.IsNullOrWhiteSpace(reqDetail) ? "No details provided" : reqDetail)</div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </td>
                        }
                    </tr>
                </table>
            }
            else
            {
                <p>No service types available.</p>
            }
            <div style="page-break-inside: avoid;">
                <label class="form-label fw-semibold">Request Details</label>
                <textarea class="form-control" rows="5" readonly>@(model.TryGetValue("ServiceDetails", out var serviceDetails) ? serviceDetails?.ToString() : "N/A")</textarea>
            </div>
        </div>
        <div class="footer">
            <p>Page 1/2 - Generated by IT Request System</p>
        </div>
    </div>
    <div class="page">
        <div class="header">
            <img src="/images/logo.png" alt="Company Logo" style="height: 50px; display: inline-block; vertical-align: middle; margin-right: 10px;" />
            <div style="display: inline-block; vertical-align: middle;">
                <h1 style="margin: 0;">IT Request Form</h1>
                <p style="margin: 2px 0;">Form No.: @(model.TryGetValue("FormNumber", out var formNumber2) ? formNumber2?.ToString() : "N/A")</p>
                <p style="margin: 2px 0;">Date: @(model.TryGetValue("RequestDate", out var requestDate2) && requestDate2 is DateTime requestDateValue2 ? requestDateValue2.ToString("dd-MM-yyyy") : "N/A")</p>
            </div>
        </div>
        <div class="container">
            <h2>Section 2: For IT</h2>
            <table>
                <tr>
                    <th style="width: 50%;">Received Date</th>
                    <td>@(model.TryGetValue("ReceivedDate", out var receivedDate) && receivedDate is DateTime receivedDateValue ? receivedDateValue.ToString("dd-MM-yyyy") : "N/A")</td>
                </tr>
                <tr>
                    <th>Assigned To</th>
                    <td>@(model.TryGetValue("AssignedTo", out var assignedTo) ? assignedTo?.ToString() : "N/A")</td>
                </tr>
                <tr>
                    <th>IT Details</th>
                    <td>@(model.TryGetValue("ITDetails", out var itDetails) ? itDetails?.ToString() : "N/A")</td>
                </tr>
            </table>
            <div>
                <label class="form-label fw-semibold">Priority</label>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" @(model.TryGetValue("Priority", out var priority) && priority?.ToString() == "High" ? "checked" : "") disabled />
                    <label class="form-check-label">High</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" @(priority?.ToString() == "Medium" ? "checked" : "") disabled />
                    <label class="form-check-label">Medium</label>
                </div>
                <div class="form-check form-check-inline">
                    <input class="form-check-input" type="checkbox" @(priority?.ToString() == "Low" ? "checked" : "") disabled />
                    <label class="form-check-label">Low</label>
                </div>
            </div>
            <h6><strong>Approval and Acceptance</strong></h6>
            <table>
                <tr>
                    <th style="width: 33.33%;">Requester</th>
                    <th style="width: 33.33%;">Approver</th>
                    <th style="width: 33.33%;">User (UAT/Acceptance)</th>
                </tr>
                <tr>
                    <td>
                        <input type="text" class="form-control my-2" value="@(model.TryGetValue("RequesterName", out var reqName) ? reqName?.ToString() : "N/A")" readonly />
                        <label class="form-label">Date</label>
                        <input type="text" class="form-control" value="@(model.TryGetValue("RequesterDate", out var reqDate) && reqDate is DateTime requesterDateValue ? requesterDateValue.ToString("dd-MM-yyyy") : "N/A")" readonly />
                    </td>
                    <td>
                        <textarea class="form-control my-2" rows="2" readonly>@(model.TryGetValue("ApproverText", out var approverText) ? approverText?.ToString() : "N/A")</textarea>
                        <label class="form-label">Date</label>
                        <input type="text" class="form-control" value="@(model.TryGetValue("ApproverDate", out var appDate) && appDate is DateTime approverDateValue ? approverDateValue.ToString("dd-MM-yyyy") : "N/A")" readonly />
                    </td>
                    <td>
                        <input type="text" class="form-control my-2" value="@(model.TryGetValue("UatUser", out var uatUser) ? uatUser?.ToString() : "N/A")" readonly />
                        <label class="form-label">Date</label>
                        <input type="text" class="form-control" value="@(model.TryGetValue("UatDate", out var uatDate) && uatDate is DateTime uatDateValue ? uatDateValue.ToString("dd-MM-yyyy") : "N/A")" readonly />
                    </td>
                </tr>
                <tr>
                    <th>IT Officer</th>
                    <th>Approver (Other Systems)</th>
                    <th>User (UAT/Acceptance)</th>
                </tr>
                <tr>
                    <td>
                        <input type="text" class="form-control my-2" value="@(model.TryGetValue("ITOfficer", out var itOfficer) ? itOfficer?.ToString() : "N/A")" readonly />
                        <label class="form-label">Date</label>
                        <input type="text" class="form-control" value="@(model.TryGetValue("ITDate", out var itDate) && itDate is DateTime itOfficerDate ? itOfficerDate.ToString("dd-MM-yyyy") : "N/A")" readonly />
                    </td>
                    <td>
                        <textarea class="form-control my-2" rows="2" readonly>@(model.TryGetValue("OtherApproverText", out var otherApprover) ? otherApprover?.ToString() : "N/A")</textarea>
                        <label class="form-label">Date</label>
                        <input type="text" class="form-control" value="@(model.TryGetValue("OtherApproverDate", out var otherAppDate) && otherAppDate is DateTime otherApproverDate ? otherApproverDate.ToString("dd-MM-yyyy") : "N/A")" readonly />
                    </td>
                    <td>
                        <input type="text" class="form-control my-2" value="@(model.TryGetValue("UatUser2", out var uatUser2) ? uatUser2?.ToString() : "N/A")" readonly />
                        <label class="form-label">Date</label>
                        <input type="text" class="form-control" value="@(model.TryGetValue("UatDate2", out var uatDate2) && uatDate2 is DateTime uatDate2Value ? uatDate2Value.ToString("dd-MM-yyyy") : "N/A")" readonly />
                    </td>
                </tr>
            </table>
        </div>
        <div class="footer">
            <p>Page 2/2 - Generated by IT Request System</p>
        </div>
    </div>
</body>
</html>